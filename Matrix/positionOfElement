// Matrix Search: Write a program to search for a given element in a matrix. The input will be a matrix and a target element, and the output should be the position of the element in the matrix or a message indicating that the element is not present in the matrix.
import java.util.Scanner;

public class MatrixSearch {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Get matrix dimensions from user
        System.out.print("Enter number of rows in the matrix: ");
        int rows = scanner.nextInt();
        System.out.print("Enter number of columns in the matrix: ");
        int cols = scanner.nextInt();

        int[][] matrix = new int[rows][cols];

        // Get matrix elements from user
        System.out.println("Enter matrix elements:");
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                System.out.print("Enter element at position [" + i + "][" + j + "]: ");
                matrix[i][j] = scanner.nextInt();
            }
        }

        // Get target element from user
        System.out.print("Enter target element to search for: ");
        int target = scanner.nextInt();

        // Search for target element in matrix
        int[] position = searchMatrix(matrix, target);

        // Print the position of target element or a message indicating not found
        if (position != null) {
            System.out.println("Target element found at position [" + position[0] + "][" + position[1] + "]");
        } else {
            System.out.println("Target element not found in the matrix.");
        }
    }

    public static int[] searchMatrix(int[][] matrix, int target) {
        int rows = matrix.length;
        int cols = matrix[0].length;
        int[] position = null;

        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                if (matrix[i][j] == target) {
                    position = new int[]{i, j};
                    break;
                }
            }
        }

        return position;
    }
}
